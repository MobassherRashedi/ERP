@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@model UserWithRolesViewModel
@{
    ViewData["Title"] = "All Users";
}

@section Styles
{
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/css/customStyle.css">
}

@section Scripts
{
    <script src="~/adminlte/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/adminlte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/jszip/jszip.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        $(function () {
            var table = $("#adminUser").DataTable({
                processing: true,
                serverSide: true,
                responsive: true,
                lengthChange: false,
                searching: false,
                autoWidth: false,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, 'All']],
                ajax: {
                    url: "/Admin/AdminUser/GetUsersJsonData",
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function (d) {
                        d.Search = {
                            Value: $("#customSearchBox").val(),
                        };
                        return JSON.stringify(d);
                    },
                },
                columns: [
                    {
                        data: null,
                        width: '5%',
                        render: function (data, type, row) {
                            return `<input type="checkbox" class="row-select" data-id="${row.userId}">`; // Use userId from response
                        },
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'fullName',
                        name: "FullName",
                        className: 'dt-center',
                        width: '20%',
                        searchable: true,
                        orderable: true
                    },
                    {
                        data: 'email',
                        name: "Email",
                        className: 'dt-center',
                        width: '25%',
                        searchable: true,
                        orderable: true
                    },
                    {
                        data: 'roles', // Assuming 'roles' is an array in the response
                        name: "Roles",
                        className: 'dt-center',
                        width: '15%',
                        render: function (data, type, row) {
                            return data.length > 0 ? data.join(', ') : 'No Roles'; // Join roles into a comma-separated string
                        },
                        searchable: true,
                        orderable: false // Change to true if you want to allow sorting by roles
                    },
                    {
                        data: 'createdDate',
                        name: "CreateDate",
                        className: 'dt-center',
                        width: '15%',
                        searchable: true,
                        orderable: true
                    },
                    {
                        data: null,
                        className: 'dt-center',
                        width: '20%',
                        render: function (data, type, row) {
                            const id = row.userId; // Use userId from response
                            return `
                                <button type="button" class="btn btn-info btn-sm" onclick="window.location='/Admin/AdminUser/Update/${id}'">
                                    <i class="fas fa-pencil-alt"></i> Edit
                                </button>
                                <button type="button" class="btn btn-danger btn-sm show-bs-modal" data-id='${id}'>
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            `;
                        },
                        searchable: false,
                        orderable: false
                    }
                ],
                dom: '<"row"<"col-sm-12 col-md-6"lB>>' +
                    '<"row"<"col-sm-12"tr>>' +
                    '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',

                buttons: [
                    { extend: 'copy', text: 'Copy', className: 'dropdown-item' },
                    { extend: 'csv', text: 'CSV', className: 'dropdown-item' },
                    { extend: 'excel', text: 'Excel', className: 'dropdown-item' },
                    { extend: 'pdf', text: 'PDF', className: 'dropdown-item' },
                    { extend: 'print', text: 'Print', className: 'dropdown-item' },
                    { extend: 'colvis', text: 'Column Visibility', className: 'dropdown-item' },
                ],
            });

            // Search functionality
            $('#customSearchBox').on('input', function () {
                table.ajax.reload();
            });
            // Append DataTable buttons to dropdown
            table.buttons().container().appendTo('#dataTableExport .dropdown-menu');
            // Move DataTable buttons to dropdown
            table.buttons().container().appendTo('#dataTableExport');

            // Event listener for the delete button
            $('#adminUser').on('click', '.show-bs-modal', function (event) {
                let id = $(this).data("id");
                let modal = $("#modal-default");
                modal.find('.modal-body p').text('Are you sure you want to delete this record?');
                $("#deleteId").val(id);
                $("#deleteForm").attr("action", "/admin/adminuser/delete");
                modal.modal('show');
            });
            //single delete submit
            $("#deleteButton").click(function () {
                $("#deleteForm").submit();
            });

            $(document).ready(function () {
                var selectedIds = []; // Array to store selected product IDs

                // Handle "Select All" checkbox
                $('#selectAll').on('change', function () {
                    var isChecked = this.checked;
                    $('.row-select').each(function () {
                        $(this).prop('checked', isChecked);
                        toggleSelection($(this).data('id'), isChecked); // Update selectedIds array
                    });
                    toggleBulkDeleteButton();
                });

                // Event delegation for dynamically added checkboxes
                $(document).on('change', '.row-select', function () {
                    var id = $(this).data('id');
                    toggleSelection(id, $(this).prop('checked')); // Update selectedIds array

                    // If any checkbox is unchecked, uncheck "Select All"
                    if (!$(this).prop('checked')) {
                        $('#selectAll').prop('checked', false);
                    }

                    // If all checkboxes on the current page are checked, check "Select All"
                    if ($('.row-select:checked').length === $('.row-select').length) {
                        $('#selectAll').prop('checked', true);
                    }

                    // Show or hide the bulk delete button
                    toggleBulkDeleteButton();
                });

                // Show or hide the bulk delete button based on selections
                function toggleBulkDeleteButton() {
                    $('#bulkDeleteContainer').toggle(selectedIds.length > 0);
                }

                // Function to add or remove ID from selectedIds array
                function toggleSelection(id, isSelected) {
                    if (isSelected) {
                        if (!selectedIds.includes(id)) selectedIds.push(id);
                    } else {
                        selectedIds = selectedIds.filter(selectedId => selectedId !== id);
                    }
                }

                // Bulk delete modal trigger and collect IDs
                $('#bulkDelete').on('click', function () {
                    if (selectedIds.length > 0) {
                        $('#deleteIds').val(selectedIds.join(',')); // Set the hidden input in the modal with selected IDs
                        $('#BulkDelete').modal('show'); // Show the delete confirmation modal
                    } else {
                        alert('No User selected for deletion.');
                    }
                });

                // Handle the delete button inside the modal
                $('#bulkDeleteButton').on('click', function () {
                    var deleteIds = $('#deleteIds').val();
                    console.log("Deleting IDs: ", deleteIds); // Log IDs to be deleted for debugging
                    if (deleteIds) {
                        $('#bulkDeleteForm').submit(); // Submit the form with selected IDs for deletion
                    } else {
                        alert('No User selected for deletion.');
                    }
                });

                // Preserve checkbox selections on page change
                $('#adminUser').on('draw.dt', function () {
                    $('.row-select').each(function () {
                        var id = $(this).data('id');
                        $(this).prop('checked', selectedIds.includes(id));
                    });

                    // Set "Select All" checkbox based on current page selections
                    $('#selectAll').prop('checked', $('.row-select:checked').length === $('.row-select').length);
                });
            });

        
        
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>All Users</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">All Users</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="btn-group">
                            <input type="text" id="customSearchBox" class="form-control form-control-sm" placeholder="Search...">
                        </div>
                        <div class="btn-group" style="display: none;" id="bulkDeleteContainer">
                            <button id="bulkDelete" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#BulkDelete">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                        <div class="card-tools">
                            <div class="btn-group">
                                <a href="@Url.Action("Create")" class="btn btn-info btn-sm">
                                    <i class="fas fa-plus"></i> New User
                                </a>
                            </div>

                            <!-- Other existing content such as user listings, etc. -->
                            <!-- Export buttons dropdown -->
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    Export <i class="fas fa-cog"></i>
                                </button>
                                <div id="dataTableExport" class="dropdown-menu" role="menu">
                                    <!-- DataTable buttons will be appended here dynamically -->
                                </div>
                            </div>
                            <!-- Custom length menu dropdown -->
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    Show <span class="items-count">10</span>
                                </button>
                                <div class="dropdown-menu" role="menu">
                                    <a class="dropdown-item" href="#" onclick="$('#category').DataTable().page.len(10).draw(); $('.items-count').text('10');">10</a>
                                    <a class="dropdown-item" href="#" onclick="$('#category').DataTable().page.len(25).draw(); $('.items-count').text('25');">25</a>
                                    <a class="dropdown-item" href="#" onclick="$('#category').DataTable().page.len(50).draw(); $('.items-count').text('50');">50</a>
                                    <a class="dropdown-item" href="#" onclick="$('#category').DataTable().page.len(-1).draw(); $('.items-count').text('All');">All</a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <partial name="_ResponsePartial" />
                        <partial name="_ModalPartial" />
                        <table id="adminUser" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="selectAll">
                                    </th>
                                    <th>Full Name</th>
                                    <th>Email</th>
                                    <th>Roles</th> <!-- Roles column added before Actions -->
                                    <th>Create Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- DataTable will populate here -->
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Bulk Delete Modal -->
<div class="modal fade" id="BulkDelete" tabindex="-1" role="dialog" aria-labelledby="BulkDeleteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="BulkDeleteLabel">Confirm Bulk Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="bulkDeleteForm" method="post" asp-action="BulkDelete" asp-controller="AdminUser" asp-area="Admin">
                <input type="hidden" id="deleteIds" name="ids" /> <!-- Ensure the name matches your controller's action -->
                <div class="modal-body">
                    Are you sure you want to delete the selected users?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" id="bulkDeleteButton" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

