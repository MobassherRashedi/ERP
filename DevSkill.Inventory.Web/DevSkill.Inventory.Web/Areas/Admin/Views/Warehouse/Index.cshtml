@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@model List<DevSkill.Inventory.Web.Areas.Admin.Models.WarehouseViewModel>

@{
    ViewData["Title"] = "All Warehouses";
}
@{
    var iconPath = Url.Content("~/adminlte/svg/icons.svg");
}
@section Styles
{
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/css/customStyle.css">
}

@section Scripts
{
    <script src="~/adminlte/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/adminlte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/jszip/jszip.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        $(function () {
            // Initialize the DataTable
            var table = $("#warehouse").DataTable({
                processing: true,
                serverSide: true,
                responsive: true,
                lengthChange: false,
                searching: false,
                autoWidth: false,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, 'All']
                ],
                ajax: {
                    url: "/Admin/Warehouse/GetWarehousesJsonData",
                    type: "POST",
                    contentType: "application/json",
                    dataType: "json",
                    data: function (d) {
                        d.Search = {
                            Value: $("#customSearchBox").val(), // Custom search box value
                        };
                        return JSON.stringify(d);
                    }
                },
                columns: [
                    {
                        data: null,
                        className: 'checkbox-column',
                        width: '5%',
                        render: function (data, type, row) {
                            return `<input type="checkbox" class="row-select" data-id="${row.id}">`;
                        },
                        searchable: false,
                        orderable: false
                    },
                    { data: 'name', name: "Name", className: 'dt-center', width: '20%', searchable: true, orderable: true },
                    { data: 'phoneNumber', name: "Phone Number", className: 'dt-center', width: '10%', searchable: true, orderable: true },
                    { data: 'email', name: "Email", className: 'dt-center', width: '15%', searchable: true, orderable: true },
                    { data: 'address', name: "Address", className: 'dt-center', width: '20%', searchable: true, orderable: true },
                    { data: 'createDate', name: "Create Date", className: 'dt-center', width: '15%', searchable: true, orderable: true },
                    {
                        data: null,
                        className: 'dt-center',
                        width: '13%',
                        render: function (data, type, row) {
                            const id = row.id;
                            return `
                                         <div style="display: flex; justify-content: center;">
                                                    <a href="#" onclick="fetchWarehouseDetails('${id}')" class="view-btn"  title="View Details">
                                        <svg class="action-icon">
                                            <use xlink:href="@iconPath#icon-view"></use>
                                        </svg>
                                    </a>
                                            <a href="#" onclick="openEditModal('${id}')" class="edit-btn" title="Edit Warehouse">
                                                <svg class="action-icon">
                                            <use xlink:href="@iconPath#icon-edit"></use>
                                        </svg>
                                    </a>
                                                            <a href="#" class="delete-btn show-bs-modal" data-id='${id}'  value='${id}' title="Delete Warehouse">
                                                <svg class="action-icon">
                                            <use xlink:href="@iconPath#icon-delete"></use>
                                        </svg>
                                    </a>
                                </div>
                            `;
                        },
                        searchable: false,
                        orderable: false
                    }
                ],
                order: [1, 'asc'],
                dom: '<"row"<"col-sm-12 col-md-6"lB>>' +
                    '<"row"<"col-sm-12"tr>>' +
                    '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                buttons: [
                    { extend: 'csv', text: 'CSV', className: 'dropdown-item' },
                    { extend: 'excel', text: 'Excel', className: 'dropdown-item' },
                    { extend: 'pdf', text: 'PDF', className: 'dropdown-item' },

                ],
                language: {
                    paginate: {
                        previous: '<',  // Left arrow for "Previous"
                        next: '>'       // Right arrow for "Next"
                    }
                }
            });

            // Custom Search Box Input
            $('#customSearchBox').on('input', function () {
                table.ajax.reload();
            });

            // Attach buttons for export functionality
            table.buttons().container().appendTo('#dataTableExport .dropdown-menu');
            table.buttons().container().appendTo('#dataTableExport');

            // Define the function on the window object for global access
            window.fetchWarehouseDetails = function (warehouseId) {
                $.ajax({
                    url: `/Admin/Warehouse/GetWarehouseDetailsWithProducts?warehouseId=${warehouseId}`, // Using route parameter
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            // Fill the form or modal with the warehouse details
                            $('#warehouseName').val(response.data.name);
                            $('#warehouseAddress').val(response.data.address);
                            $('#warehousePhoneNumber').val(response.data.phoneNumber);
                            $('#warehouseEmail').val(response.data.email);
                            $('#warehouseCreateDate').val(new Date(response.data.createDate).toLocaleString());

                            // Render the products (if any)
                            var productListHtml = '';
                            if (response.data.products && response.data.products.length > 0) {
                                response.data.products.forEach(function (product) {
                                    productListHtml += `
                                    <li class="list-group-item">
                                        <strong>${product.productTitle}</strong> |
                                        Stock: ${product.stock} | Low Stock: ${product.lowStockThreshold}
                                    </li>
                                `;
                                });
                            } else {
                                productListHtml = '<li class="list-group-item">No products available.</li>';
                            }

                            // Append the product list to the modal or div
                            $('#warehouseProducts').html(productListHtml);

                            // Show the warehouse details modal
                            $('#warehouseDetailsModal').modal('show');
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while fetching warehouse details.');
                    }
                });
            };

            // Fatch Warehouse Info to Update warehouse
            window.openEditModal = function (warehouseId) {
             
                // Fetch warehouse details
                $.ajax({
                    url: `/Admin/Warehouse/GetWarehouseDetails?id=${warehouseId}`,
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            //console.log(response.data);
                            // Populate the modal fields
                            $('#updateWarehouseId').val(response.data.id);
                            $('#updateWarehouseName').val(response.data.name);
                            $('#updateWarehouseAddress').val(response.data.address);
                            $('#updateWarehousePhoneNumber').val(response.data.phoneNumber);
                            $('#updateWarehouseEmail').val(response.data.email);

                            // Show the modal
                            $('#editWarehouseModal').modal('show');
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while fetching warehouse details.');
                    }
                });
            }

            // Handle form submission
            $('#updateWarehouseForm').on('submit', function (event) {
                event.preventDefault(); // Prevent default form submission

                $.ajax({
                    url: '/Admin/Warehouse/UpdateJson',
                    type: 'POST',
                    data: $(this).serialize(), // Serialize form data
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Add CSRF token
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#editWarehouseModal').modal('hide'); // Close the modal
                            $('#warehouse').DataTable().ajax.reload();
                        } else {
                            alert(response.message); // Show error message
                            if (response.errors) {
                                console.error(response.errors); // Log validation errors (if any)
                            }
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating the warehouse.');
                    }
                });
            });

            
            // Handle form submission for creating warehouse
            $('#newWarehouseButton').click(function () {
                $.ajax({
                    url: '/Admin/Warehouse/Create',
                    type: 'GET',
                    success: function (data) {
                        $('#createWarehouseFormContainer').html(data);
                        $('#createWarehouseModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        alert(`Error loading warehouse form: ${xhr.status} - ${xhr.statusText}`);
                    }
                });
            });

            $('#warehouse').on('click', '.show-bs-modal', function (event) {
                let id = $(this).data("id");
                let modal = $("#modal-default");
                modal.find('.modal-body p').text('Are you sure you want to delete this record?');
                $("#deleteButton").data("id", id); // Store the ID in the delete button
                modal.modal('show');
            });

            $("#deleteButton").click(function () {
                let id = $(this).data("id");
                let token = $('input[name="__RequestVerificationToken"]').val(); // CSRF token

                $.ajax({
                    url: '/admin/warehouse/DeleteJson',
                    type: 'POST',
                    data: {
                        id: id,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#warehouse').DataTable().ajax.reload();
                        } else {
                            alert(response.message); // Show error message
                        }
                    },
                    error: function () {
                        alert('An error occurred while deleting the warehouse.');
                    }
                });

                // Close the modal after initiating the delete request
                $("#modal-default").modal('hide');
            });


            $(document).ready(function () {
                var selectedIds = []; // Array to store selected warehouse IDs

                // Handle "Select All" checkbox
                $('#selectAll').on('change', function () {
                    var isChecked = this.checked;
                    $('.row-select').each(function () {
                        $(this).prop('checked', isChecked);
                        toggleSelection($(this).data('id'), isChecked); // Update selectedIds array
                    });
                    toggleBulkDeleteButton();
                });

                // Event delegation for dynamically added checkboxes
                $(document).on('change', '.row-select', function () {
                    var id = $(this).data('id');
                    toggleSelection(id, $(this).prop('checked')); // Update selectedIds array

                    // If any checkbox is unchecked, uncheck "Select All"
                    if (!$(this).prop('checked')) {
                        $('#selectAll').prop('checked', false);
                    }

                    // If all checkboxes on the current page are checked, check "Select All"
                    if ($('.row-select:checked').length === $('.row-select').length) {
                        $('#selectAll').prop('checked', true);
                    }

                    // Show or hide the bulk delete button
                    toggleBulkDeleteButton();
                });

                // Show or hide the bulk delete button based on selections
                function toggleBulkDeleteButton() {
                    $('#bulkDeleteContainer').toggle(selectedIds.length > 0);
                }

                // Function to add or remove ID from selectedIds array
                function toggleSelection(id, isSelected) {
                    if (isSelected) {
                        if (!selectedIds.includes(id)) selectedIds.push(id);
                    } else {
                        selectedIds = selectedIds.filter(selectedId => selectedId !== id);
                    }
                }

                // Bulk delete modal trigger and collect IDs
                $('#bulkDelete').on('click', function () {
                    if (selectedIds.length > 0) {
                        $('#deleteIds').val(selectedIds.join(',')); // Set the hidden input in the modal with selected IDs
                        $('#BulkDelete').modal('show'); // Show the delete confirmation modal
                    } else {
                        alert('No warehouse selected for deletion.');
                    }
                });

                // Handle the delete button inside the modal
                $('#bulkDeleteButton').on('click', function () {
                    var deleteIds = selectedIds.join(','); // Get the selected IDs as a comma-separated string
                    if (deleteIds) {
                        $.ajax({
                            url: '/admin/warehouse/BulkDeleteJson', // Update the URL for your BulkDeleteJson action
                            type: 'POST',
                            data: {
                                ids: deleteIds,
                                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Include CSRF token
                            },
                            success: function (response) {
                                if (response.success) {
                                    $('#warehouse').DataTable().ajax.reload();
                                    $('#bulkDeleteContainer').hide();
                                } else {
                                    alert(response.message); // Show error message
                                }
                            },
                            error: function () {
                                alert('An error occurred while deleting the warehouses.');
                            }
                        });

                        // Close the modal after initiating the delete request
                        $('#BulkDelete').modal('hide');
                    } else {
                        alert('No warehouse selected for deletion.');
                    }
                });

                // Preserve checkbox selections on page change
                $('#warehouse').on('draw.dt', function () {
                    $('.row-select').each(function () {
                        var id = $(this).data('id');
                        $(this).prop('checked', selectedIds.includes(id));
                    });

                    // Set "Select All" checkbox based on current page selections
                    $('#selectAll').prop('checked', $('.row-select:checked').length === $('.row-select').length);
                });
            });




        });
    </script>


}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>All Warehouses</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">All Warehouses</li>
                </ol>
            </div>
        </div>
    </div>
</section>



<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="btn-group">
                            <input type="text" id="customSearchBox" class="form-control form-control-sm" placeholder="Search...">
                        </div>

                        <div class="card-tools">
                            <div class="btn-group" style="display: none;" id="bulkDeleteContainer">
                                <button id="bulkDelete" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#BulkDelete">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>

                            <!-- Export buttons dropdown -->
                            <div class="btn-group">
                                <button type="button" class="btn btn-sucess btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    Export <i class="fas fa-cog"></i>
                                </button>
                                <div id="dataTableExport" class="dropdown-menu" role="menu">
                                    <!-- DataTable buttons will be appended here dynamically -->
                                </div>
                            </div>
                            <!-- Custom length menu dropdown -->
                            <div class="btn-group">
                                <button type="button" class="btn btn-info btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    Show <span class="items-count">10</span>
                                </button>
                                <div class="dropdown-menu" role="menu">
                                    <a class="dropdown-item" href="#" onclick="$('#warehouse').DataTable().page.len(10).draw(); $('.items-count').text('10');">10</a>
                                    <a class="dropdown-item" href="#" onclick="$('#warehouse').DataTable().page.len(25).draw(); $('.items-count').text('25');">25</a>
                                    <a class="dropdown-item" href="#" onclick="$('#warehouse').DataTable().page.len(50).draw(); $('.items-count').text('50');">50</a>
                                    <a class="dropdown-item" href="#" onclick="$('#warehouse').DataTable().page.len(-1).draw(); $('.items-count').text('All');">All</a>
                                </div>
                            </div>
                            <div class="btn-group">
                                <a href="#" id="newWarehouseButton" class="btn btn-primary-cs btn-sm" data-toggle="modal" data-target="#createWarehouseModal">
                                    <i class="fas fa-plus"></i> New
                                </a>
                            </div>
                        </div>
                    </div>

                    <!-- /.card-header -->
                    <div class="card-body">
                        <partial name="_ResponsePartial" />
                        <partial name="_ModalPartial" />
                        <table id="warehouse" class="table table-striped">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="selectAll" /></th>
                                    <th>Name</th>
                                    <th>Phone</th>
                                    <th>Email</th>
                                    <th>Address</th>
                                    <th>Create Date</th>
                                    <th>Actions</th> 
                                </tr>
                            </thead>
                            <tbody>
                                <!-- DataTable will populate rows dynamically -->
                            </tbody>
                        </table>

                    </div>
                    <!-- /.card-body -->

                </div>
            </div>
        </div>
    </div>
</section>

<!-- Warehouse Details Modal -->
<div class="modal fade" id="warehouseDetailsModal" tabindex="-1" role="dialog" aria-labelledby="warehouseDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="warehouseDetailsModalLabel">Warehouse Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row">
                        <!-- Column 1 -->
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="warehouseName">Name</label>
                                <input type="text" class="form-control" id="warehouseName" readonly>
                            </div>
                            <div class="form-group">
                                <label for="warehouseAddress">Address</label>
                                <input type="text" class="form-control" id="warehouseAddress" readonly>
                            </div>
                            <div class="form-group">
                                <label for="warehousePhoneNumber">Phone Number</label>
                                <input type="text" class="form-control" id="warehousePhoneNumber" readonly>
                            </div>
                            <div class="form-group">
                                <label for="warehouseEmail">Email</label>
                                <input type="email" class="form-control" id="warehouseEmail" readonly>
                            </div>
                            <div class="form-group">
                                <label for="warehouseCreateDate">Created On</label>
                                <input type="text" class="form-control" id="warehouseCreateDate" readonly>
                            </div>
                        </div>

                        <!-- Column 2 -->
                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="warehouseProducts">Products</label>
                                <ul id="warehouseProducts" class="list-group">
                                    <!-- List of products will be inserted here -->
                                </ul>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



<!-- Create Warehouse Modal -->
<div class="modal fade" id="createWarehouseModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create New Warehouse</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="createWarehouseFormContainer">
                    <!-- Form will be loaded here dynamically -->
                </div>
            </div>
            @* <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div> *@
        </div>
    </div>
</div>


<!-- Update Warehouse Modal -->
<div class="modal fade" id="editWarehouseModal" tabindex="-1" aria-labelledby="editWarehouseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="updateWarehouseForm">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="editWarehouseModalLabel">Edit Warehouse</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="updateWarehouseId" name="Id">
                    <div class="mb-3">
                        <label for="updateWarehouseName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="updateWarehouseName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="updateWarehouseAddress" class="form-label">Address</label>
                        <input type="text" class="form-control" id="updateWarehouseAddress" name="Address">
                    </div>
                    <div class="mb-3">
                        <label for="updateWarehousePhoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="updateWarehousePhoneNumber" name="PhoneNumber">
                    </div>
                    <div class="mb-3">
                        <label for="updateWarehouseEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="updateWarehouseEmail" name="Email">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Update Warehouse Modal -->
@* <div class="modal fade" id="updateWarehouseModal" tabindex="-1" role="dialog" aria-labelledby="updateWarehouseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateWarehouseModalLabel">Update Warehouse</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="updateWarehouseFormContainer">
                    <!-- Form will be dynamically loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div> *@
<!-- Bulk Delete Warehouse Modal -->
<div class="modal fade" id="BulkDelete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the selected warehouses?</p>
                <form id="bulkDeleteForm" action="/Admin/Warehouse/BulkDelete" method="post" asp-antiforgery="true" area="Admin">
                    <!-- Hidden input to store the list of selected IDs -->
                    <input type="hidden" id="deleteIds" name="ids" />
                </form>

            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" id="bulkDeleteButton" class="btn btn-danger">Yes, Delete!</button>
            </div>
        </div>
    </div>
</div>
