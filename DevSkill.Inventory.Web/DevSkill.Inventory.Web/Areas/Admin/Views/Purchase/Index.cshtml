@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@model PurchaseListModel
@{
    ViewData["Title"] = "All Purchases";
}

@section Styles
{
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link rel="stylesheet" href="~/adminlte/css/customStyle.css">
}

@section Scripts
{
    <script src="~/adminlte/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/adminlte/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/adminlte/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/adminlte/plugins/jszip/jszip.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/adminlte/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/adminlte/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        $(function () {
            var table = $("#purchaseTable").DataTable({
                processing: true,
                serverSide: true,
                responsive: true,
                ajax: {
                    url: "/Admin/Purchase/GetPurchasesJsonData",
                    type: "POST",
                    contentType: "application/json",
                    data: function (d) {
                        d.Search = { Value: $("#customSearchBox").val() };
                        return JSON.stringify(d);
                    }
                },
                columns: [
                    {
                        data: null,
                        width: '10%',
                        render: function (data, type, row) {
                            return `<input type="checkbox" class="row-select" data-id="${row[2]}">`;
                        },
                        searchable: false,
                        orderable: false
                    },
                    { data: 0, name: "SupplierName", className: 'dt-center', width: '40%', searchable: true, orderable: true },
                    { data: 1, name: "PurchaseDate", className: 'dt-center', width: '20%', searchable: true, orderable: true },
                    { data: 2, name: "TotalAmount", className: 'dt-center', width: '20%', searchable: true, orderable: true },
                    {
                        data: null,
                        className: 'dt-center',
                        width: '30%',
                        render: function (data, type, row) {
                            const id = row[2];
                            return `
                                                <button type="button" class="btn btn-info btn-sm" onclick="fetchPurchase('${id}')">
                                                    <i class="fas fa-pencil-alt"></i> Edit
                                                </button>
                                                <button type="button" class="btn btn-danger btn-sm show-bs-modal" data-id='${id}'>
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            `;
                        },
                        searchable: false,
                        orderable: false
                    }
                ],
                order: [1, 'asc'],
                dom: '<"row"<"col-sm-12 col-md-6"lB>>' +
                    '<"row"<"col-sm-12"tr>>' +
                    '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                buttons: [
                    { extend: 'csv', text: 'CSV', className: 'dropdown-item btn-default' },
                    { extend: 'excel', text: 'Excel', className: 'dropdown-item btn-default' },
                    { extend: 'pdf', text: 'PDF', className: 'dropdown-item btn-default' },
                ],
                language: {
                    paginate: {
                        previous: '<',  // Left arrow for "Previous"
                        next: '>'       // Right arrow for "Next"
                    }
                }
            });

            // Search event
            $('#customSearchBox').on('input', function () {
                table.ajax.reload();
            });

            $('#purchaseTable').on('click', '.show-bs-modal', function (event) {
                let id = $(this).data("id");
                let modal = $("#modal-default");
                modal.find('.modal-body p').text('Are you sure you want to delete this record?');
                $("#deleteId").val(id);
                $("#deleteForm").attr("action", "/admin/purchase/delete");
                modal.modal('show');
            });

            // Update modal logic
            window.fetchPurchase = function (id) {
                $.ajax({
                    url: `/Admin/Purchase/UpdateJson/${id}`,
                    type: 'GET',
                    success: function (response) {
                        $("#updateId").val(response.id);
                        $("#updateSupplierName").val(response.supplierName);
                        $("#updateTotalAmount").val(response.totalAmount);
                        // Populate items in the update modal
                        response.items.forEach(item => {
                            let itemRow = `<div class="purchase-item">
                                        <input type="text" name="Item[${item.productId}].Quantity" value="${item.quantity}">
                                        <input type="text" name="Item[${item.productId}].UnitPrice" value="${item.unitPrice}">
                                    </div>`;
                            $("#updateItems").append(itemRow);
                        });
                        $("#updatePurchaseModal").modal('show');
                    },
                    error: function (xhr, status, error) {
                        alert('Error fetching purchase: ' + xhr.responseText);
                    }
                });
            };

            // Handle update form submission
            $('#updatePurchaseForm').on('submit', function (e) {
                e.preventDefault();
                var formData = {
                    Id: $("#updateId").val(),
                    SupplierName: $("#updateSupplierName").val(),
                    TotalAmount: $("#updateTotalAmount").val(),
                    Items: [] // Include purchase items here
                };
                $(".purchase-item").each(function () {
                    var item = {
                        ProductId: $(this).find('input[name^="Item"]').attr("name").split('[')[1].split(']')[0], // Getting product ID
                        Quantity: $(this).find('input[name^="Item"]').val(),
                        UnitPrice: $(this).find('input[name^="Item"]').val()
                    };
                    formData.Items.push(item);
                });

                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: `/Admin/Purchase/UpdateJson/${$("#updateId").val()}`,
                    type: 'POST',
                    contentType: 'application/json',
                    headers: { 'RequestVerificationToken': token },
                    data: JSON.stringify(formData),
                    success: function (response) {
                        if (response.success) {
                            $('#purchaseTable').DataTable().ajax.reload();
                            $('#updatePurchaseModal').modal('hide');
                            window.location.href = "/Admin/Purchase/Index";
                        } else {
                            alert('Error updating purchase: ' + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Error updating purchase: ' + xhr.responseText);
                    }
                });
            });

            // Delete button logic
            $("#deleteButton").click(function () {
                $("#deleteForm").submit();
            });
        });
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>All Purchases</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">All Purchases</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <!-- Purchase Table -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="btn-group">
                            <input type="text" id="customSearchBox" class="form-control form-control-sm" placeholder="Search...">
                        </div>
                        <div class="card-tools">
                            <!-- New Purchase button -->
                            <a href="#" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#createPurchaseModal">
                                <i class="fas fa-plus"></i> New Purchase
                            </a>
                        </div>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="purchaseTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="selectAll" /></th>
                                    <th>Supplier Name</th>
                                    <th>Date</th>
                                    <th>Total Amount</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Purchase data will be populated here from controller -->
                            </tbody>
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section><!-- /.content -->

<!-- Bulk Delete Warehouse Modal -->
<div class="modal fade" id="BulkDelete">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Delete</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the selected categories?</p>
                <form id="bulkDeleteForm" action="/Admin/Category/BulkDelete" method="post" asp-antiforgery="true" area="Admin">
                    <!-- Hidden input to store the list of selected IDs -->
                    <input type="hidden" id="deleteIds" name="ids" />
                </form>

            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" id="bulkDeleteButton" class="btn btn-danger">Yes, Delete!</button>
            </div>
        </div>
    </div>
</div>